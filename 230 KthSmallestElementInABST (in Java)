/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private int count =0;
    public int kthSmallest(TreeNode root, int k) {
        ArrayList<Integer> arr = new  ArrayList<Integer>();
        inOrderTraversal(root,k, arr);
        return arr.get(0);
    }

    public void inOrderTraversal (TreeNode root,int k, ArrayList<Integer> arr)
    {
        if (root == null)
        {
            return;
        }
        
        inOrderTraversal(root.left,k, arr);
        count ++;
        if(count == k)
        {
            arr.add(root.val);
            return;
        }
        inOrderTraversal (root.right,k, arr);

    }
}
