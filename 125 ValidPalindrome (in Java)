// two pointer solution
class Solution {
    public boolean isPalindrome(String s) {
        String l = s.toLowerCase();
        int frontIndex = 0;
        int lastIndex = l.length() -1;

        while(lastIndex > frontIndex)
        {
            Boolean isLetterf = Character.isLetter(l.charAt(frontIndex)) || Character.isDigit(l.charAt(frontIndex));
            Boolean isLetterl = Character.isLetter(l.charAt(lastIndex)) || Character.isDigit(l.charAt(lastIndex));

            if(!isLetterf)
            {
                frontIndex ++;
            }
            else if(!isLetterl)
            {
                lastIndex --;
            }
            else
            {
                if(l.charAt(frontIndex) != l.charAt(lastIndex))
                {
                    return false;
                }
                frontIndex ++;
                lastIndex --;
            }
        }

        return true;

    }
}

// brute force
class Solution {
    public boolean isPalindrome(String s) {
        String l = s.toLowerCase();
        String finalans = "";

        for(int i =0; i<l.length(); i++)
        {
            if(Character.isLetter(l.charAt(i)) || Character.isDigit(l.charAt(i)) )
            {
                finalans += l.charAt(i);
            }
        }

        for(int i =0; i< finalans.length(); i++)
        {
           if(finalans.charAt(i) != finalans.charAt(finalans.length() - i- 1))
           {
               return false;
           }
        }

        return true;

    }
}
