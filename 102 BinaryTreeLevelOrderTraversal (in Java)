/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> answer = new ArrayList<List<Integer>>();

        ArrayList<TreeNode> que = new ArrayList<TreeNode>();
        if(root == null)
        {
            return answer;
        }
        que.add(root);

        while (!que.isEmpty())
        {
            int size = que.size();
            List<Integer> lvlVals = new ArrayList<Integer>();

            for(int i =0; i<size; i++)
            {
                TreeNode curr = que.remove(0);
                lvlVals.add(curr.val);

                if(curr.left!= null)
                {
                    que.add(curr.left);
                }
                 if(curr.right!= null)
                {
                    que.add(curr.right);
                }
            }
            answer.add(lvlVals);
        }

        return answer;
    }
}
